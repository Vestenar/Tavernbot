from random import choice
import time
from settings import TAFI_ID
from settings import CHATBOT_TOKEN as chatbot_token

last_drink = 0

alko = ['CAACAgEAAxkBAAICgF6oCcIsaCSU6us8r1QZvWXLlXtHAAI2CAACv4yQBGnvTm8BVH2EGQQ',      # –±–æ—Ä–æ–¥–∞—á       0 –ø–∏–≤–Ω—ã–µ
        'CAACAgIAAxkBAAIBoF6nGX93X0vEnB4Oa3E0ZlIBb725AAJ9CAACCLcZAunMCcpewSH8GQQ',      # godofwar      1
        'CAACAgIAAxkBAAICgV6oCfW0ePXUGi7BKuCnTJ8ewAHHAAIvAAOvxlEa-NtBblWpkVsZBA',       # —É–ª–∏—Ç–∫–∞        2
        'CAACAgIAAxkBAAICy16oHczuxPssB2HSsZDSTWzVEJiTAAKJBQAClvoSBYtPxYQyKuLyGQQ',      # viking beer       3
        'CAACAgIAAxkBAAIJHl6tspnmAAGQ9orP1hQhLkdhO7eIIwACrgIAAlv_8go7RcMC73c8mxkE',     # beerman head over 4
        'CAACAgIAAxkBAAICv16oG0zFM0sYVsdgA2iV4zLtnGKOAAKoAgACW__yCl703BtCE6LzGQQ',      # beerman pssst     5
        'CAACAgIAAxkBAAICu16oGsrCCjBxUcUEcpIf5zAU1ZlJAAKfAgACW__yCk1AiWUF4XYOGQQ',      # beerman juggler   6
        'CAACAgIAAxkBAAPEXqX9mNtBuBaZDbslRTvQoYVP8AAD4AYAAvoLtghhj6hIGFRhGBkE',         # —Å–æ–±–∞–∫–∏ –±–µ—à–µ–Ω–Ω—ã–µ   7
        'CAACAgEAAxkBAALepWAz1LqtC8Mk7nyiUp0Unzc-gm0UAAJWAQACXiwsBB-eBbDn5lPXHgQ',      # –ø—å—è–Ω–∞—è —Ä—ã—Å—å       8
        'CAACAgIAAxkBAAPUXqX-F_CahpH_XX13uf5uoCWLv30AAnQAA5i_gA3AdesOfYN5gxkE',         # –∫–æ—à–∫–∞             9 –≤–∏–Ω–Ω—ã–µ +–¥—Ä
        'CAACAgIAAxkBAAPWXqX-P1-HaAdo2I0U3j5vR1rkDgMAAt4AA1advQql73c4VYMVxBkE',         # —Ç–µ–ª–µ—Å–æ–±–∞—á–∫–∞
        'CAACAgIAAxkBAAPDXqX9kCuutKW1OWks7muDCwuEYQsAAr4AA5zW5woDa9z_qaorhBkE',         # –¥–∏–Ω–æ–±–∞—Ä–º–µ–Ω
        'CAACAgIAAxkBAAPXXqX-cCgdLEvcGUiM8d6x2gEqPHoAAuUFAAKW-hIFIupdSHfdpZIZBA',       # —à–µ–π—Ö
        'CAACAgIAAxkBAAICuV6oGht2jy_K3sEVoa62Aw4x0NqsAAKwAgACW__yCrY3JODCJrmbGQQ',      # beerman boring
        'CAACAgIAAxkBAAICul6oGlTaP6eaZib9EVsQ0CSyovI6AAKvAgACW__yCpGjCnlbto0nGQQ',      # beerman double
        'CAACAgIAAxkBAAICvF6oGvXHQr4wzqb-1Uqy9qCZq_xEAAKtAgACW__yCsyD7ff_xiVmGQQ',      # beerman mixing
        'CAACAgIAAxkBAALet2Az1wtSYN6EhHwRI6gZ1dGMM7EQAAKkAgACW__yCnIQAd7UjqszHgQ',      # beerman jesus
        'CAACAgIAAxkBAAICzF6oHe7K2eJYvitHPX0WomUOIfB_AAKCBQAClvoSBXG7XPY1_q_rGQQ',      # viking vine
        'CAACAgIAAxkBAAIC216oIo9nN_hqhol7n49VRwRZbqtqAAIhAANf-4UVTeD-5ljFw2EZBA',       # snail gentleman
        'CAACAgIAAxkBAAIMJF65jqu15UFvKpSBPtZa_PhnWf7lAAIoAAMoD2oUkEu3yx5vAxAZBA',       # –±–æ–∫–∞–ª —Å –∫–æ—à–∫–æ–π
        'CAACAgIAAxkBAAIMJV65jt1GI-kevvgHyN9Da-YkDWepAAIsAgACz7vUDnWyGzZVIZerGQQ',      # –±–æ–∫–∞–ª —Å–æ –∑–º–µ–µ–π
        'CAACAgIAAxkBAAIMJl65jv0KCL4yveBn7fZ0Ld019QmDAALyAgAC73cHAAGUblmkID-I2xkE',     # —Ä–æ–º –æ—Å—Ç—Ä–æ–≤ —Å–æ–∫—Ä–æ–≤–∏—â
        'CAACAgIAAxkBAAIMJ165jyN-FHkHchGyp7uhlCyWD-QOAAJWAANEDc8XGUGSGSyvU3cZBA',       # —Å–æ–±–∞—á–∫–∞ —Å –±–æ–∫–∞–ª–∞–º–∏
        ]

spirt = ['CAACAgIAAxkBAAII42FEpSAO3kmXJ0OqAAFQj1b3l_IqDQACZhAAApO8-EmMjC2KIB7StSAE',    # –∫–ª–∏–∑—å–º–∞
         'CAACAgIAAxkBAAII8GFEpiLUaoUvIuSCp4YoyW43vXdiAAIKAAP-GKoTLvJgGu1w56UgBA',      # chemistry brandon
         'CAACAgIAAxkBAAII-2FEp4fSCCwKSSokwcZB9nYoaDneAAJIFAACY4tGDNcMsdNoe2_iIAQ',     # alkoholizm
         'CAACAgIAAxkBAAII_GFEqO454yrD-4McejRTOQt6143HAAJTAwACDDsAAQpuqbY1uUV7HCAE',    # razveli tut
         ]

owlstiker = ['CAACAgIAAxkBAAIBDV6mAAG-Pl8AAWnSZDvHgUz81ww5p2IAAkwAA3FwZwQygrCaXSZHYhkE',    # —Å–æ–≤–∞ –ª–∞–º–±—Ä—É—Å–∫–æ
             'CAACAgIAAxkBAAIC3V6oK2Wr3EsDl_zcbaUw_fR2Vn05AALtAANr7XwK1YxMfEd8EAUZBA',      # —Å–æ–≤–∞ —Å –ø–∏–≤–æ–º
             'CAACAgIAAxkBAAIDHl6oLiQS0mm8TV3RC6JBi9CQKLZNAALEAQACGELuCNMqsp36EbLVGQQ',     # —Å–æ–≤–∞ —Å –≤–∏–Ω–æ–º
             'CAACAgIAAxkBAAP1XqX_zsMyJjH84e8d7Gf-tNxp9XUAAjIAA8GcYAwHIPxp5MyzxRkE',        # —Å–æ–≤–∞ —Å –º–æ–±–∏–ª–æ–π
             'CAACAgIAAxkBAAIDeV6oOUtqkMcEOFx67kA3sfgOIBqYAAJuAAMYQu4IpymFR7sasEoZBA',      # —Å–æ–≤–∞ –±—É–±—É–±—É
             ]

snake = ["–®—à—à—à—à—à—à—à-—à—à—à—à-—à—à—à üêç", "–®—à—à—à—à—à—à—Ç–æ –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ?", "–ê –∑–º–µ—é–∫ –ø–æ–∫–æ—Ä–º–∏–ª–∏?",
         "–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤—Å–µ—Ö –≤–∞—Å, –∑–º–µ–π–∫–∏!", "–¢—É—Ç –µ—Å—Ç—å –∑–º–µ–µ—É—Å—Ç?"
         ]
lapki = ["*–∂–º—è–∫ –ª–∞–ø–∫–∏*", "üêæ", "üêæüêæ", "–û! –õ–∞–ø–∫–∏!"]

# pingvin = ["–ö—Ä—ã–ª—ã—à–∫–∏ –ª—É—á—à–µ, —á–µ–º –ª–∞–ø–∫–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –∫ –ø–∏–≤—É!", "–ö—Ä—ã–ª—å—è, –Ω–æ–≥–∏... –ì–ª–∞–≤–Ω–æ–µ —Ö–≤–æ—Å—Ç!",
#            "–ù–∞—à–ª–∏ –ø–∏–Ω–≥–≤–∏–Ω–∞ - –≤–µ–¥–∏—Ç–µ –≤ –∑–æ–æ–ø–∞—Ä–∫", "–≠—Ç–æ—Ç —Ç–∏–ø –ø–æ–¥–ª—ã–π –∏ –º–µ—Ä–∑–∫–∏–π! –û–Ω –º–æ–π –ª—É—á—à–∏–π –¥—Ä—É–≥, –¥–∞.",
#            "–£–ª—ã–±–∞–µ–º—Å—è –∏ –º–∞—à–µ–º!", "–≠—Ç–æ—Ç –∑–∞–≥–æ–≤–æ—Ä —Å–µ—Ä—å—ë–∑–Ω–µ–µ, —á–µ–º —è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª –≤ —Å–≤–æ–∏—Ö —Å–∞–º—ã—Ö –¥–∏–∫–∏—Ö –ø–∞—Ä–∞–Ω–æ–∏–¥–∞–ª—å–Ω—ã—Ö —Å–Ω–∞—Ö.",
#            "–ù–µ —Å—Ç–æ–∏—Ç –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å–∏–ª—É –ø–∏–Ω–≥–≤–∏–Ω—å–µ–π –Ω–µ–æ—Ç—Ä–∞–∑–∏–º–æ—Å—Ç–∏.", "–ò –≥–¥–µ –Ω–∞—à –º–æ–Ω–æ—Ö—Ä–æ–º–Ω—ã–π —Å–æ—Ä–∞—Ç–Ω–∏–∫?",
#            "–î–≤–∞ –º–∏–ª–ª–∏–æ–Ω–∞ –¥–æ–ª–ª–∞—Ä–æ–≤? –°–∫–æ–ª—å–∫–æ —ç—Ç–æ –≤ –∫–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä—ã–±–µ?", "–ö—Ç–æ —Å–∫–∞–∑–∞–ª, —á—Ç–æ –ø–∏–Ω–≥–≤–∏–Ω—ã –Ω–µ –ª–µ—Ç–∞—é—Ç?"]

zakus = ["–ó–∞–∫—É—Å—ã–≤–∞–π—Ç–µ, –∑–∞–∫—É—Å—ã–≤–∞–π—Ç–µ! –ù–µ —á–∞—Å—Ç–∏—Ç–µ!", "–ê –∑–∞–∫—É—Å—ã–≤–∞—Ç—å –∫—Ç–æ –±—É–¥–µ—Ç?",
         "–ê –≤–∞–º –µ—Å—Ç—å 18?", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –í–∞–º –ø–æ–∫–∞ —Ö–≤–∞—Ç–∏—Ç."
         ]
bothere = ["–Ø –∑–¥–µ—Å—å!", "–ß–µ–≥–æ –∏–∑–≤–æ–ª–∏—Ç–µ?", "–≠—Ç–æ —è. –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—Ç–µ?", "–î–∞-–¥–∞?"]
botheretafi = ["–Ø –∑–¥–µ—Å—å, –í–∞—à–µ –í–µ–ª–∏—á–µ—Å—Ç–≤–æ!", "–ß–µ–≥–æ –∏–∑–≤–æ–ª–∏—Ç–µ, –í–∞—à–∞ –°–≤–µ—Ç–ª–æ—Å—Ç—å?",
               "–≠—Ç–æ —è, –í–∞—à–µ—Å—Ç–≤–æ. –ö–∞–∫ –ø–æ–∂–∏–≤–∞–µ—Ç –±–ª–∞–≥–æ—Ä–æ–¥–Ω–∞—è –æ—Å–æ–±–∞?",
               "–Ø –≥–ª–∞–≤–Ω—ã–π –±–∞—Ä–º–µ–Ω –≤ —ç—Ç–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏! –ù–æ –í–∞–º, –ª—é–±–µ–∑–Ω–∞—è, —Å —Ä–∞–¥–æ—Å—Ç—å—é —É—Å—Ç—É–ø–ª—é."]
payment = ["–°—Ç–æ—è—Ç—å –∑–∞ —Å—Ç–æ–π–∫–æ–π –æ–¥–Ω–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ! –ê –Ω–µ —Å—Ç–æ—è—Ç—å - –¥—Ä—É–≥–æ–µ.",
           '*–¥–æ—Å—Ç–∞–µ—Ç –±–∞–Ω–∫—É —Å –Ω–∞–¥–ø–∏—Å—å—é "–ß–∞–µ–≤—ã–µ –ê—Ä—á–∏"*',
           '*—Å –≥—Ä—É—Å—Ç—å—é —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –±–∞–Ω–∫—É —Å –Ω–∞–¥–ø–∏—Å—å—é "–ß–∞–µ–≤—ã–µ –ê—Ä—á–∏"*',
           "–û–ø–ª–∞—Ç–∞? –ù–µ, –Ω–µ —Å–ª—ã—à–∞–ª", "–î–µ–Ω—å–≥–∏ - –∑–ª–æ! –ò –º–Ω–µ –Ω–∞ –≤—Å–µ –∑–ª–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç!"]


def check_group(message):
    from re import findall
    group = findall(r'–≥—Ä—É–ø–ø.* ([a-z–∞-—è])', message)
    dict_translate = str.maketrans('–∞–±—Å–¥–µ—Ñ–≥—Ö–∏', 'abcdefghi')
    if group:
        group = group[0].translate(dict_translate)
        return group.upper()
    else: return None


def reply(message):
    from re import findall
    seller_name, seller_id, message_date = ('', 0, time.time())
    if type(message) != str:
        seller_name = message.json["from"]["first_name"]
        seller_id = message.json["from"]["id"]
        message_date = message.json['date']
        message = message.text.lower()
    else:
        message = message.lower()

    re_phrases = {
        'tea_coffee': r'\b—á–∞[–π—é—è]|\b–∫–æ—Ñ–µ|\b–∫–æ–º–ø–æ—Ç',
        'juice': r'\b—Å–æ–∫[–∞—É]?\b',
        'wanttodrink': r'\b–Ω–∞–ª(|–∏–≤)([–µ–∞])+–π\b|\b–ø–ª–µ—Å–Ω(–∏|—É)',
        'beer': r'\b–ø–∏–≤(–æ|–∞|–∫–∞)|\b—Å–∏–¥—Ä|\b–ø–µ–Ω–Ω–æ(–µ|–≥–æ)\b',
        'owl': r'\b—Å[–æ–∞]–≤–∞\b',
        'gorgosha': r'\b–≥–æ—Ä–≥–æ[—à–Ω]',
        'yasnogriv': r'\b—è—Å–Ω–æ–≥—Ä',
        'kitty': r'\b–º[—è]+[—É–∫—Ñ]+\b',
        'c2h5oh': r'\b—Å–ø–∏—Ä—Ç[–∞—É]?\b|c2h5oh',
        'wine': r'\b–≤–∏–Ω(—Ü|–∏—à–∫)?[–æ–∞—É]|\b–∫–æ–Ω—å—è.*–∫|\b–≤–∏—Å–∫(–∏|–∞—Ä–∏–∫)|\b—Ä–æ–º[–∞—É]?\b|\b–≤–æ–¥(–∫|–æ—á–∫)[–∞–∏—É]|–ª–∞–º–±—Ä—É—Å',
        'vsegun': r'–≤—Å[–µ—ë]–≥—É–Ω',
        'hello': r'–ø—Ä–∏–≤–µ—Ç|\b—Ö–∞–π|\b–∑–¥—Ä—è–º|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|(–¥–æ–±—Ä(—ã–π|–æ–≥–æ|–æ–µ)( —É—Ç—Ä[–æ–∞]|( –¥–µ–Ω—å| –¥–Ω—è)| –≤–µ—á–µ—Ä[–∞]| –≤—Ä–µ–º–µ–Ω–∏))',
        'masshello': r'–≤—Å–µ–º (–ø—Ä–∏–≤–µ—Ç|—Ö–∞–π|–∑–¥—Ä—è–º|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|(–¥–æ–±—Ä(—ã–π|–æ–≥–æ|–æ–µ) (—É—Ç—Ä[–æ–∞]|(–¥–µ–Ω—å|–¥–Ω—è)|–≤–µ—á–µ—Ä[–∞]|–≤—Ä–µ–º–µ–Ω–∏)))',
        'byebye': r'–≤—Å–µ–º (\b–ø–æ–∫–∞\b|—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏|—Å–Ω–æ–≤|–¥–æ (–≤—Å—Ç—Ä–µ—á|—Å–≤–∏–¥–∞–Ω–∏—è|–∑–∞–≤—Ç—Ä–∞))',
        'botname': r'\b–±–æ—Ç[–∞—É–µ]?|–±–∞—Ä–º–µ–Ω|—Ö–æ–∑—è–∏–Ω|–∞—Ä—á–∏(|–±–∞–ª—å–¥)?[–æ]?|oldtavern_bot',
        'botpay': r'\b–ø–ª–∞—Ç[–∏—è]—Ç|\b(–æ|–∑–∞—Ä)–ø–ª–∞—Ç',
        'tellstory': r'(—Ä–∞—Å—Å–∫–∞–∂–∏|–ø–æ–≤–µ–¥–∞–π|–º—ã —Ö–æ—Ç–∏–º|\b—Ç—Ä–∞–≤(–∏|–∞–Ω–∏)).*(–∏—Å—Ç–æ—Ä–∏[—è—é–∏–π]|–±–∞–π–∫[–∏—É]|–∞–Ω–µ–∫–¥–æ—Ç)|(—Ä–∞–∑|–ø–æ)–≤–µ—Å–µ–ª–∏',
        'movie': r'\b—á—Ç–æ .*–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å|(—Ñ–∏–ª—å–º|–∫–∏–Ω–æ).*(–ø–æ—Å–æ–≤–µ—Ç—É–π|–∫–∞–∫–æ|–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å)|'
                 r'(–ø–æ—Å–æ–≤–µ—Ç—É–π|–∫–∞–∫–æ|–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å).*(—Ñ–∏–ª—å–º|–∫–∏–Ω–æ)',
        'obida': r'\b–¥—É—Ä–∞(–∫|—Ü–∫–∏–π)|\b—Ç—É–ø(–æ–π|–∞—è)\b|\b–∏–¥–∏–æ—Ç|–≥–ª—É–ø(–∞—è|—ã–π)|—Ö–µ—Ä–æ–≤(—ã–π|–∞—è)|—Ö—Ä–µ–Ω–æ–≤(–∞|–∞—è|—ã–π)',
        'valutes': r'–Ω–∞ –±–∏—Ä–∂–∞—Ö|–∫—É—Ä—Å(—ã|–∞—Ö) –≤–∞–ª—é—Ç|—á—Ç–æ –ø–æ—á–µ–º|–∫—É–¥–∞ –≤–∫–ª–∞–¥—ã–≤–∞—Ç—å',
        'player': r'—Ä–∞—Å—Å–∫–∞–∂–∏ –æ |—á—Ç–æ –∑–Ω–∞–µ—à—å –æ |—á—Ç–æ —Å–ª—ã—à–∞–ª –æ |—à–µ–ø–Ω–∏ –æ |–∫–∞–∫–∏–µ —Å–ª—É—Ö–∏ –æ ',
        'recepie': r'(–Ω–∞—É—á–∏|–¥–∞–π|–ø–æ–¥–µ–ª–∏—Å—å|.*—Å–∫–∞–∂–∏).*(–≥–æ—Ç–æ–≤–∏—Ç—å|—Ä–µ—Ü–µ–ø—Ç)',
        'football_euro': r'–ª–∏–≥.+ –µ–≤—Ä–æ–ø—ã',
        'football_champ': r'–ª–∏–≥.+ —á–µ–º–ø–∏–æ–Ω–æ–≤',
        'football_konference': r'–ª–∏–≥.+ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü',
        'football_world': r'—á–µ–º–ø–∏–æ–Ω–∞—Ç –º–∏—Ä–∞|—á–º-?22'
    }
    found_phrases = []

    for phrase in re_phrases:
        if findall(re_phrases[phrase], message):
            found_phrases.append(phrase)
    findall = None

    miau = ['–ú—è—É! –ß–µ–≥–æ –± –∏ –Ω–µ –º—è—É–∫–Ω—É—Ç—å –ø–æ –ø—å—è–Ω–∏, –¥–∞?', '–ú–Ø–£! –¢–∞–∫ –Ω–∞–¥–æ?',
            '–ö—Ç–æ —ç—Ç–æ —Ç–∞–º —É –Ω–∞—Å –º—è—É—á–∏—Ç?', '–ö–∏—Å-–∫–∏—Å-–∫–∏—Å, {}.'.format(seller_name)
            ]

    greetings = ["–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, {}!".format(seller_name),
                 "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç!", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?",
                 "–ë–æ–Ω–∂—É—Ä! –ñ–µ –Ω–µ –º–∞–Ω–∂ –ø–∞ —Å–∏—Å –∂—é—Ä? –ß—Ç–æ –±—ã —ç—Ç–æ –Ω–∏ –∑–Ω–∞—á–∏–ª–æ."
                 ]

    otvetka = ["–£–≤–∞–∂–∞–µ–º—ã–π, –ø–æ–ø—Ä–∏–¥–µ—Ä–∂–∏—Ç–µ –∫–æ–Ω–µ–π!", "–ê –µ—Å–ª–∏ –≤—ã—à–∏–±–∞–ª—É –ø–æ–∑–æ–≤—É?",
               "–°–∞–º —Ç–∞–∫–æ–π, {}!".format(seller_name),
               "–ß—Ç–æ-—Ç–æ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ —Ä–∞—Å—à—É–º–µ–ª–∏—Å—å, –ø–æ—Ä–∞ –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è.",
               "–ê –Ω–µ –ø–æ—Ä–∞ –ª–∏ –≤–∞–º –ø–æ –∫–æ–π–∫–∞–º, –≥–æ—Å–ø–æ–¥–∞ —Ö–æ—Ä–æ—à–∏–µ?",
               "–í –±–æ—é —Å –±–æ—Å—Å–æ–º –±—É–¥–µ—à—å –≤—ã–ø–µ–Ω–¥—Ä–∏–≤–∞—Ç—å—Å—è, {}, –∞ —Ç—É—Ç —Å–æ–±–ª—é–¥–∞–π –ø—Ä–∏–ª–∏—á–∏—è.".format(seller_name),
               ]

    global last_drink

    if 'obida' in found_phrases:
        return choice(otvetka), 'text'
    if 'masshello' in found_phrases or ('hello' in found_phrases and 'botname' in found_phrases):
        return choice(greetings), 'text'
    if 'byebye' in found_phrases:
        return "–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ", 'text'
    if 'botname' in found_phrases and 'tellstory' in found_phrases:
        from getinfo import get_story
        return get_story(), 'text'
    if 'botname' in found_phrases and 'movie' in found_phrases:
        from getinfo import get_movie
        return get_movie(), 'text'
    if 'botname' in found_phrases and 'recepie' in found_phrases:
        from getinfo import get_recepie
        return get_recepie(), 'img'
    if 'botname' in found_phrases and 'valutes' in found_phrases:
        from getinfo import get_currencies
        return get_currencies(), 'text'
    if 'botname' in found_phrases and 'football_euro' in found_phrases:
        from getinfo import get_football
        group = check_group(message)
        return get_football('euro', group), 'text'
    if 'botname' in found_phrases and 'football_champ' in found_phrases:
        from getinfo import get_football
        group = check_group(message)
        return get_football('champ', group), 'text'
    if 'botname' in found_phrases and 'football_konference' in found_phrases:
        from getinfo import get_football
        group = check_group(message)
        return get_football('konf', group), 'text'
    if 'botname' in found_phrases and 'football_world' in found_phrases:
        from getinfo import get_football
        group = check_group(message)
        return get_football('world', group), 'text'

    if 'botname' in found_phrases and 'botpay' in found_phrases:
        return choice(payment), 'text'
    if 'owl' in found_phrases and 'wanttodrink' in found_phrases:
        last_drink = message_date
        return choice(owlstiker[:3]), 'sticker'
    if 'owl' in found_phrases:
        return choice(owlstiker[1:]), 'sticker'
    if 'wine' in found_phrases:
        if message_date - last_drink >= 10:
            last_drink = message_date
            return choice(alko[9:]), 'sticker'
        else:
            return choice(zakus), 'text'
    if 'beer' in found_phrases:
        if message_date - last_drink >= 10:
            last_drink = message_date
            return choice(alko[:9]), 'sticker'
        else:
            return choice(zakus), 'text'
    if 'c2h5oh' in found_phrases:
        return choice(spirt), 'sticker'
    if 'tea_coffee' in found_phrases:
        answer = ['–•–æ—Ç–∏—Ç–µ —ç—Ç–æ–≥–æ? –ú–æ–∂–µ—Ç —á–µ–≥–æ –ø–æ–∫—Ä–µ–ø—á–µ?', '–° —Å—É—à–∫–∞–º–∏, –∞–≥–∞, –∫–æ–Ω–µ—á–Ω–æ', '–©—è—Å, –Ω–∞–±–∞–¥—è–∂—É.']
        return choice(answer), 'text'
    if 'juice' in found_phrases:
        answer = ['–°–æ–æ–æ–∫? –ù—É —ç—Ç–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö! –ò —Ç–æ–ª—å–∫–æ –≤–∏—à–Ω—ë–≤—ã–π.',
                  '–°–æ–∫ - —ç—Ç–æ –∫–∞–∫ –≤–∏–Ω–æ, —Ç–æ–ª—å–∫–æ –±–µ–∑ –≥—Ä–∞–¥—É—Å–∞? –ï—Å—Ç—å, –∫–æ–Ω–µ—á–Ω–æ.',
                  '*–¥–æ—Å—Ç–∞–µ—Ç –∏–º–µ–Ω–Ω–æ–π —Å—Ç–∞–∫–∞–Ω*']
        return choice(answer), 'text'
    if 'wanttodrink' in found_phrases:
        if message_date - last_drink >= 10:
            last_drink = message_date
            return choice(alko), 'sticker'
        else:
            return choice(zakus), 'text'

    if '—Å–µ–±–µ' not in message and 'player' in found_phrases:
        from getgodville import god_info
        playername = message.split(' –æ ')[-1].split(',')[0].split('?')[0].split('.')[0].split('!')[0].strip()
        return god_info(playername), 'text'
    if 'gorgosha' in found_phrases:
        return choice(snake), 'text'
    if 'yasnogriv' in found_phrases:
        return choice(lapki), 'text'
    if 'kitty' in found_phrases:
        return choice(miau), 'text'
    if 'vsegun' in found_phrases:
        return '–°–Ω–∏–º–∏—Ç–µ —Å –Ω–µ–≥–æ —à–∫—É—Ä—É!', 'text'
    if 'botname' in found_phrases:
        # from chatbot import dialog_flow
        # for name in ['–±–æ—Ç', '–±–∞—Ä–º–µ–Ω', '–∞—Ä—á–∏–±–∞–ª—å–¥', '–∞—Ä—á–∏', '–∞—Ä—á–∏–±–ª—å']:
        #     message = message.replace(name, ' ').strip()
        # try_ans = dialog_flow(message, chatbot_token)
        # dialog_flow = None
        try_ans = None      # –≤ —Å–≤—è–∑–∏ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ DialogFlow
        if try_ans:
            return try_ans, 'text'
        else:
            if seller_id == TAFI_ID:        # –Ω–∞ –¢–∞—Ñ–∏
                return choice(botheretafi), 'text'
            else:
                return choice(bothere), 'text'
    return None, None


if __name__ == '__main__':
    import json
    # with open('params.txt') as init_file:
    #     bot_params = json.loads(init_file.read())
    #     chatbot_token = bot_params["chatbot_token"]

    while True:
        msg = input()
        print(reply(msg))
